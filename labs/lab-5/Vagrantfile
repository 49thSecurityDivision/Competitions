# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "kali_vm" do |kali|
    kali.vm.box = "kalilinux/rolling"
    kali.vm.provision "shell", inline: <<-SHELL
      # Create a new user
      useradd -m -s /bin/bash -G sudo labuser
      # Set the password
      echo 'labuser:strongpassword' | chpasswd
    SHELL
  end 

  config.vm.define "ubuntu_vm" do |ubuntu|
    ubuntu.vm.box = "ubuntu/xenial64"
    ubuntu.vm.boot_timeout = 360

    ubuntu.vm.provision "shell", path: "./scripts/provision-postfix.sh"
    ubuntu.vm.provision "shell", path: "./scripts/provision-dovecot.sh"
    ubuntu.vm.provision "shell", path: "./scripts/provision.sh"

    ubuntu.vm.provision "shell", inline: <<-SHELL
      # Update and Install Services
      debconf-set-selections <<< 'mysql-server mysql-server/root_password select purple'
      debconf-set-selections <<< 'mysql-server mysql-server/root_password_again select purple'
      apt-get update
      apt-get install -y mysql-server redis-server nginx ftp vsftpd telnetd openssh-server

      # 1. MySQL: Allow remote root login without password and bind to all interfaces
      sed -i 's/bind-address/#bind-address/' /etc/mysql/mysql.conf.d/mysqld.cnf
      echo "bind-address = 0.0.0.0" >> /etc/mysql/mysql.conf.d/mysqld.cnf

      # 2. Redis: Bind to all interfaces with no password
      sed -i 's/bind 127.0.0.1/bind 0.0.0.0/' /etc/redis/redis.conf
      sed -i 's/# requirepass foobared/requirepass ""/' /etc/redis/redis.conf

      # 3. Nginx: Server tokens onls
      sed -i 's/server_tokens off;/server_tokens on;/' /etc/nginx/nginx.conf

      # 4. FTP: Anonymous login enabled
      echo "anonymous_enable=YES" >> /etc/vsftpd.conf

      # 5. VSFTPD: Enable write access for anonymous
      echo "anon_upload_enable=YES" >> /etc/vsftpd.conf
      echo "anon_mkdir_write_enable=YES" >> /etc/vsftpd.conf

      # 6. Telnet: Enable the telnet service
      systemctl enable --now inetd redis-server mysql nginx inetd vsftpd postfix

      # 7. Postfix: Open relay configuration
      postconf -e "relayhost = "
      postconf -e "mynetworks = 0.0.0.0/0"
      postconf -e "smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination"

      # Restart all services to apply changes
      systemctl restart redis-server mysql nginx inetd vsftpd postfix
      # Create a new user
      useradd -m -s /bin/bash -G sudo labuser

      # Set the password
      echo 'labuser:strongpassword' | chpasswd
    SHELL
  end

  config.vm.define "windows_server" do |windows|
    windows.vm.box = "gusztavvargadr/windows-server"
    windows.vm.box_version = "2102.0.2310"
    windows.vm.boot_timeout = 720
    windows.vm.communicator = "winrm"


    # Forwarding ports for services
    windows.vm.network "forwarded_port", guest: 80, host: 8080
    windows.vm.network "forwarded_port", guest: 3306, host: 3307
    windows.vm.network "forwarded_port", guest: 21, host: 2121

    # Windows provision script
    windows.vm.provision "shell", path: "./scripts/ftp.ps1", privileged: true
    windows.vm.provision "shell", inline: <<-POWERSHELL
      # Misconfigure Windows Firewall (similar to having no firewall on Ubuntu)
      Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False

      # Create a new admin user
      $password = ConvertTo-SecureString 'strongpassword' -AsPlainText -Force
      New-LocalUser -Name "LabUser" -Password $password -FullName "Lab Admin" -Description "Admin User"

      # Add the user to the Administrators group
      Add-LocalGroupMember -Group "Administrators" -Member "labuser"
    POWERSHELL
  end
end
